{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["imgCss","Img","constructor","hostRef","registerInstance","ionImgWillLoad","createEvent","ionImgDidLoad","ionError","onLoad","emit","onError","srcChanged","addIO","componentDidLoad","src","undefined","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","render","h","Host","class","getIonMode","decoding","alt","part","getElement","watchers","style"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA,MAAMA,MAAM,GAAG,oMAAf;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChBC,aAAW,CAACC,OAAD,EAAU;AACnBC,yDAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKE,cAAL,GAAsBC,qDAAW,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,CAAjC;AACA,SAAKC,aAAL,GAAqBD,qDAAW,CAAC,IAAD,EAAO,eAAP,EAAwB,CAAxB,CAAhC;AACA,SAAKE,QAAL,GAAgBF,qDAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;;AACA,SAAKG,MAAL,GAAc,MAAM;AAClB,WAAKF,aAAL,CAAmBG,IAAnB;AACD,KAFD;;AAGA,SAAKC,OAAL,GAAe,MAAM;AACnB,WAAKH,QAAL,CAAcE,IAAd;AACD,KAFD;AAGD;;AACDE,YAAU,GAAG;AACX,SAAKC,KAAL;AACD;;AACDC,kBAAgB,GAAG;AACjB,SAAKD,KAAL;AACD;;AACDA,OAAK,GAAG;AACN,QAAI,KAAKE,GAAL,KAAaC,SAAjB,EAA4B;AAC1B;AACD;;AACD,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IACF,0BAA0BA,MADxB,IAEF,+BAA+BA,MAF7B,IAGF,oBAAoBA,MAAM,CAACC,yBAAP,CAAiCC,SAHvD,EAGkE;AAChE,WAAKC,QAAL;AACA,WAAKC,EAAL,GAAU,IAAIC,oBAAJ,CAAyBC,IAAI,IAAI;AACzC;AACA;AACA;AACA,YAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,cAAZ,EAA4B;AAC1B,eAAKC,IAAL;AACA,eAAKL,QAAL;AACD;AACF,OARS,CAAV;AASA,WAAKC,EAAL,CAAQK,OAAR,CAAgB,KAAKC,EAArB;AACD,KAfD,MAgBK;AACH;AACAC,gBAAU,CAAC,MAAM,KAAKH,IAAL,EAAP,EAAoB,GAApB,CAAV;AACD;AACF;;AACDA,MAAI,GAAG;AACL,SAAKI,SAAL,GAAiB,KAAKlB,OAAtB;AACA,SAAKmB,OAAL,GAAe,KAAKf,GAApB;AACA,SAAKV,cAAL,CAAoBK,IAApB;AACD;;AACDU,UAAQ,GAAG;AACT,QAAI,KAAKC,EAAT,EAAa;AACX,WAAKA,EAAL,CAAQU,UAAR;AACA,WAAKV,EAAL,GAAUL,SAAV;AACD;AACF;;AACDgB,QAAM,GAAG;AACP,WAAQC,qDAAC,CAACC,iDAAD,EAAO;AAAEC,WAAK,EAAEC,4DAAU,CAAC,IAAD;AAAnB,KAAP,EAAoCH,qDAAC,CAAC,KAAD,EAAQ;AAAEI,cAAQ,EAAE,OAAZ;AAAqBtB,SAAG,EAAE,KAAKe,OAA/B;AAAwCQ,SAAG,EAAE,KAAKA,GAAlD;AAAuD7B,YAAM,EAAE,KAAKA,MAApE;AAA4EE,aAAO,EAAE,KAAKkB,SAA1F;AAAqGU,UAAI,EAAE;AAA3G,KAAR,CAArC,CAAT;AACD;;AACK,MAAFZ,EAAE,GAAG;AAAE,WAAOa,qDAAU,CAAC,IAAD,CAAjB;AAA0B;;AAClB,aAARC,QAAQ,GAAG;AAAE,WAAO;AAC7B,aAAO,CAAC,YAAD;AADsB,KAAP;AAEpB;;AA7DY,CAAlB;AA+DAxC,GAAG,CAACyC,KAAJ,GAAY1C,MAAZ","file":"node_modules_ionic_core_dist_esm_ion-img_entry_js.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if (typeof window !== 'undefined' &&\n      'IntersectionObserver' in window &&\n      'IntersectionObserverEntry' in window &&\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    }\n    else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"src\": [\"srcChanged\"]\n  }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"],"sourceRoot":"webpack:///"}