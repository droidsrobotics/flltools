{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","element","attachComponent","delegate","_destroy","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","registerInstance","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getIonMode","config","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","disconnectedCallback","lifecycle","LIFECYCLE_WILL_UNLOAD","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","assign","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","getTimeGivenProgression","progressEnd","render","h","getElement","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","Host"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,cAAc,GAAG,CAAvB;AACA,MAAMC,mBAAmB,GAAG,CAA5B;AACA,MAAMC,oBAAoB,GAAG,CAA7B;;AACA,MAAMC,cAAN,CAAqB;AACnBC,aAAW,CAACC,SAAD,EAAYC,MAAZ,EAAoB;AAC7B,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaP,cAAb;AACD;;AACKQ,MAAI,CAACC,SAAD,EAAY;AAAA;;AAAA;AACpB,WAAI,CAACF,KAAL,GAAaN,mBAAb;;AACA,UAAI,CAAC,KAAI,CAACS,OAAV,EAAmB;AACjB,cAAML,SAAS,GAAG,KAAI,CAACA,SAAvB;AACA,aAAI,CAACK,OAAL,SAAqBC,kEAAe,CAAC,KAAI,CAACC,QAAN,EAAgBH,SAAhB,EAA2BJ,SAA3B,EAAsC,CAAC,UAAD,EAAa,oBAAb,CAAtC,EAA0E,KAAI,CAACC,MAA/E,CAApC;AACD;AALmB;AAMrB;AACD;AACF;AACA;;;AACEO,UAAQ,GAAG;AACTC,2DAAM,CAAC,KAAKP,KAAL,KAAeL,oBAAhB,EAAsC,6BAAtC,CAAN;AACA,UAAMQ,OAAO,GAAG,KAAKA,OAArB;;AACA,QAAIA,OAAJ,EAAa;AACX,UAAI,KAAKE,QAAT,EAAmB;AACjB,aAAKA,QAAL,CAAcG,iBAAd,CAAgCL,OAAO,CAACM,aAAxC,EAAuDN,OAAvD;AACD,OAFD,MAGK;AACHA,eAAO,CAACO,MAAR;AACD;AACF;;AACD,SAAKC,GAAL,GAAWC,SAAX;AACA,SAAKZ,KAAL,GAAaL,oBAAb;AACD;;AA7BkB;;AA+BrB,MAAMkB,OAAO,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWhB,MAAX,KAAsB;AACpC,MAAI,CAACe,IAAL,EAAW;AACT,WAAO,KAAP;AACD;;AACD,MAAIA,IAAI,CAAChB,SAAL,KAAmBiB,EAAvB,EAA2B;AACzB,WAAO,KAAP;AACD;;AACD,QAAMC,aAAa,GAAGF,IAAI,CAACf,MAA3B;;AACA,MAAIiB,aAAa,KAAKjB,MAAtB,EAA8B;AAC5B,WAAO,IAAP;AACD;;AACD,MAAI,CAACiB,aAAD,IAAkB,CAACjB,MAAvB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AACD,MAAI,CAACiB,aAAD,IAAkB,CAACjB,MAAvB,EAA+B;AAC7B,WAAO,KAAP;AACD;;AACD,QAAMkB,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,aAAZ,CAAd;AACA,QAAMI,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYpB,MAAZ,CAAd;;AACA,MAAIkB,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD,GArBmC,CAsBpC;;;AACA,OAAK,MAAMC,GAAX,IAAkBL,KAAlB,EAAyB;AACvB,QAAID,aAAa,CAACM,GAAD,CAAb,KAAuBvB,MAAM,CAACuB,GAAD,CAAjC,EAAwC;AACtC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CA7BD;;AA8BA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOzB,MAAP,KAAkB;AACtC,MAAI,CAACyB,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,MAAIA,IAAI,YAAY5B,cAApB,EAAoC;AAClC,WAAO4B,IAAP;AACD;;AACD,SAAO,IAAI5B,cAAJ,CAAmB4B,IAAnB,EAAyBzB,MAAzB,CAAP;AACD,CARD;;AASA,MAAM0B,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAOA,KAAK,CAACC,GAAN,CAAUH,IAAI,IAAI;AACvB,QAAIA,IAAI,YAAY5B,cAApB,EAAoC;AAClC,aAAO4B,IAAP;AACD;;AACD,QAAI,eAAeA,IAAnB,EAAyB;AACvB;AACN;AACA;AACA;AACA;AACA;AACA;AACM,aAAOD,aAAa,CAACC,IAAI,CAAC1B,SAAN,EAAkB0B,IAAI,CAACI,cAAL,KAAwB,IAAzB,GAAiChB,SAAjC,GAA6CY,IAAI,CAACI,cAAnE,CAApB;AACD;;AACD,WAAOL,aAAa,CAACC,IAAD,EAAOZ,SAAP,CAApB;AACD,GAfM,EAeJiB,MAfI,CAeGC,CAAC,IAAIA,CAAC,KAAK,IAfd,CAAP;AAgBD,CAjBD;;AAmBA,MAAMC,MAAM,GAAG,4GAAf;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChBnC,aAAW,CAACoC,OAAD,EAAU;AACnBC,yDAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKE,cAAL,GAAsBC,qDAAW,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,CAAjC;AACA,SAAKC,gBAAL,GAAwBD,qDAAW,CAAC,IAAD,EAAO,kBAAP,EAA2B,CAA3B,CAAnC;AACA,SAAKE,eAAL,GAAuBF,qDAAW,CAAC,IAAD,EAAO,iBAAP,EAA0B,CAA1B,CAAlC;AACA,SAAKG,UAAL,GAAkB,EAAlB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA;AACJ;AACA;;AACI,SAAKC,QAAL,GAAgB,IAAhB;AACD;;AACDC,qBAAmB,GAAG;AACpB,QAAI,KAAKC,OAAT,EAAkB;AAChB,WAAKA,OAAL,CAAaC,MAAb,CAAoB,KAAKC,YAAL,KAAsB,IAA1C;AACD;AACF;;AACDC,aAAW,GAAG;AACZ,QAAI,KAAKC,IAAL,KAAcvC,SAAlB,EAA6B;AAC3B,UAAI,CAAC,KAAK6B,SAAV,EAAqB;AACnB,aAAKW,OAAL,CAAa,KAAKD,IAAlB,EAAwB,KAAKE,UAA7B;AACD;AACF;AACF;;AACDC,mBAAiB,GAAG;AAClB,SAAKb,SAAL,GACE,CAAC,CAACc,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAF,IACE,CAAC,KAAKC,EAAL,CAAQC,OAAR,CAAgB,aAAhB,CAFL;;AAGA,QAAI,KAAKT,YAAL,KAAsBrC,SAA1B,EAAqC;AACnC,YAAM+C,IAAI,GAAGC,4DAAU,CAAC,IAAD,CAAvB;AACA,WAAKX,YAAL,GAAoBY,mEAAA,CAAkB,kBAAlB,EAAsCF,IAAI,KAAK,KAA/C,CAApB;AACD;;AACD,SAAKxB,cAAL,CAAoB2B,IAApB;AACD;;AACKC,kBAAgB,GAAG;AAAA;;AAAA;AACvB,YAAI,CAACb,WAAL;;AACA,YAAI,CAACH,OAAL,GAAe,OAAO,0LAAP,EAA2CiB,sBAA3C,CAAkE,MAAI,CAACP,EAAvE,EAA2E,MAAI,CAACQ,QAAL,CAAcC,IAAd,CAAmB,MAAnB,CAA3E,EAAqG,MAAI,CAACC,OAAL,CAAaD,IAAb,CAAkB,MAAlB,CAArG,EAA8H,MAAI,CAACE,MAAL,CAAYF,IAAZ,CAAiB,MAAjB,CAA9H,EAAsJ,MAAI,CAACG,KAAL,CAAWH,IAAX,CAAgB,MAAhB,CAAtJ,CAAf;;AACA,YAAI,CAACpB,mBAAL;AAHuB;AAIxB;;AACDwB,sBAAoB,GAAG;AACrB,SAAK,MAAMxD,IAAX,IAAmB,KAAK8B,KAAxB,EAA+B;AAC7B2B,2DAAS,CAACzD,IAAI,CAACX,OAAN,EAAeqE,iDAAf,CAAT;;AACA1D,UAAI,CAACR,QAAL;AACD;;AACD,QAAI,KAAKyC,OAAT,EAAkB;AAChB,WAAKA,OAAL,CAAa0B,OAAb;AACA,WAAK1B,OAAL,GAAenC,SAAf;AACD,KARoB,CASrB;;;AACA,SAAK2B,UAAL,CAAgBlB,MAAhB,GAAyB,KAAKuB,KAAL,CAAWvB,MAAX,GAAoB,CAA7C;AACA,SAAKsB,SAAL,GAAiB,IAAjB;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE+B,MAAI,CAAC5E,SAAD,EAAY8B,cAAZ,EAA4B+C,IAA5B,EAAkCC,IAAlC,EAAwC;AAC1C,WAAO,KAAKC,SAAL,CAAe;AACpBC,iBAAW,EAAE,CAAC,CADM;AAEpBC,iBAAW,EAAE,CAAC;AAAEjF,iBAAF;AAAa8B;AAAb,OAAD,CAFO;AAGpB+C;AAHoB,KAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEI,QAAM,CAACC,WAAD,EAAcnF,SAAd,EAAyB8B,cAAzB,EAAyC+C,IAAzC,EAA+CC,IAA/C,EAAqD;AACzD,WAAO,KAAKC,SAAL,CAAe;AACpBC,iBAAW,EAAEG,WADO;AAEpBF,iBAAW,EAAE,CAAC;AAAEjF,iBAAF;AAAa8B;AAAb,OAAD,CAFO;AAGpB+C;AAHoB,KAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEM,aAAW,CAACD,WAAD,EAAcE,gBAAd,EAAgCR,IAAhC,EAAsCC,IAAtC,EAA4C;AACrD,WAAO,KAAKC,SAAL,CAAe;AACpBC,iBAAW,EAAEG,WADO;AAEpBF,iBAAW,EAAEI,gBAFO;AAGpBR;AAHoB,KAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEQ,KAAG,CAACT,IAAD,EAAOC,IAAP,EAAa;AACd,WAAO,KAAKC,SAAL,CAAe;AACpBQ,iBAAW,EAAE,CAAC,CADM;AAEpBC,iBAAW,EAAE,CAFO;AAGpBX;AAHoB,KAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEW,OAAK,CAACC,eAAD,EAAkBb,IAAlB,EAAwBC,IAAxB,EAA8B;AACjC,UAAMa,QAAQ,GAAG;AACfJ,iBAAW,EAAE,CAAC,CADC;AAEfC,iBAAW,EAAE,CAAC,CAFC;AAGfX;AAHe,KAAjB;;AAKA,QAAI,OAAOa,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,CAAC1F,SAA3D,EAAsE;AACpE2F,cAAQ,CAACC,UAAT,GAAsBF,eAAtB;AACAC,cAAQ,CAACJ,WAAT,GAAuB,CAAvB;AACD,KAHD,MAIK,IAAI,OAAOG,eAAP,KAA2B,QAA/B,EAAyC;AAC5CC,cAAQ,CAACJ,WAAT,GAAuBG,eAAe,GAAG,CAAzC;AACD;;AACD,WAAO,KAAKX,SAAL,CAAeY,QAAf,EAAyBb,IAAzB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AACEe,WAAS,CAAChB,IAAD,EAAOC,IAAP,EAAa;AACpB,WAAO,KAAKC,SAAL,CAAe;AACpBQ,iBAAW,EAAE,CADO;AAEpBC,iBAAW,EAAE,CAAC,CAFM;AAGpBX;AAHoB,KAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEgB,aAAW,CAACC,UAAD,EAAaP,WAAW,GAAG,CAA3B,EAA8BX,IAA9B,EAAoCC,IAApC,EAA0C;AACnD,WAAO,KAAKC,SAAL,CAAe;AACpBQ,iBAAW,EAAEQ,UADO;AAEpBP,iBAFoB;AAGpBX;AAHoB,KAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACExB,SAAO,CAACtD,SAAD,EAAY8B,cAAZ,EAA4B+C,IAA5B,EAAkCC,IAAlC,EAAwC;AAC7C,WAAO,KAAKkB,QAAL,CAAc,CAAC;AAAEhG,eAAF;AAAa8B;AAAb,KAAD,CAAd,EAA+C+C,IAA/C,EAAqDC,IAArD,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEkB,UAAQ,CAAClD,KAAD,EAAQ+B,IAAR,EAAcC,IAAd,EAAoB;AAC1B,QAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBA,UAAI,GAAG,EAAP;AACD,KAHyB,CAI1B;;;AACA,QAAIA,IAAI,CAAC9B,QAAL,KAAkB,IAAtB,EAA4B;AAC1B8B,UAAI,CAAC9B,QAAL,GAAgB,KAAhB;AACD;;AACD,WAAO,KAAKgC,SAAL,CAAe;AACpBC,iBAAW,EAAE,CADO;AAEpBC,iBAAW,EAAEnC,KAFO;AAGpByC,iBAAW,EAAE,CAHO;AAIpBC,iBAAW,EAAE,CAAC,CAJM;AAKpBX;AALoB,KAAf,EAMJC,IANI,CAAP;AAOD;AACD;;;AACAmB,YAAU,CAAChF,EAAD,EAAKhB,MAAL,EAAaiG,SAAb,EAAwBC,SAAxB,EAAmC;AAC3C,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;;AACA,QAAItF,OAAO,CAACqF,MAAD,EAASnF,EAAT,EAAahB,MAAb,CAAX,EAAiC;AAC/B,aAAOqG,OAAO,CAACC,OAAR,CAAgB;AACrBC,eAAO,EAAE,KADY;AAErBnG,eAAO,EAAE+F,MAAM,CAAC/F;AAFK,OAAhB,CAAP;AAID;;AACD,QAAIkG,OAAJ;AACA,UAAME,OAAO,GAAG,IAAIH,OAAJ,CAAYI,CAAC,IAAKH,OAAO,GAAGG,CAA5B,CAAhB;AACA,QAAIC,MAAJ;AACA,UAAMC,UAAU,GAAG;AACjBC,eAAS,EAAE,KADM;AAEjBC,iBAAW,EAAEC,UAAU,IAAI;AACzB,YAAIC,IAAJ;AACA,cAAMC,CAAC,GAAG,IAAIX,OAAJ,CAAYI,CAAC,IAAKM,IAAI,GAAGN,CAAzB,CAAV;AACAH,eAAO,CAAC;AACNC,iBAAO,EAAE,IADH;AAENnG,iBAAO,EAAE0G,UAFH;AAGNG,qBAAW;AAAA,iKAAE,aAAY;AACvBF,kBAAI;AACJ,oBAAML,MAAN;AACD,aAHU;;AAAA;AAAA;AAAA;AAAA;AAHL,SAAD,CAAP;AAQA,eAAOM,CAAP;AACD;AAdgB,KAAnB;;AAgBA,QAAIf,SAAS,KAAK,MAAlB,EAA0B;AACxBS,YAAM,GAAG,KAAKrD,OAAL,CAAarC,EAAb,EAAiBhB,MAAjB,EAAyB2G,UAAzB,CAAT;AACD,KAFD,MAGK;AACH,YAAMO,cAAc,GAAG,KAAKrE,KAAL,CAAWsE,IAAX,CAAgBpF,CAAC,IAAIjB,OAAO,CAACiB,CAAD,EAAIf,EAAJ,EAAQhB,MAAR,CAA5B,CAAvB;;AACA,UAAIkH,cAAJ,EAAoB;AAClBR,cAAM,GAAG,KAAKlB,KAAL,CAAW0B,cAAX,EAA2B/F,MAAM,CAACiG,MAAP,CAAcjG,MAAM,CAACiG,MAAP,CAAc,EAAd,EAAkBT,UAAlB,CAAd,EAA6C;AAAEV,mBAAS,EAAE,MAAb;AAAqBoB,0BAAgB,EAAEnB;AAAvC,SAA7C,CAA3B,CAAT;AACD,OAFD,MAGK,IAAID,SAAS,KAAK,SAAlB,EAA6B;AAChCS,cAAM,GAAG,KAAK/B,IAAL,CAAU3D,EAAV,EAAchB,MAAd,EAAsBmB,MAAM,CAACiG,MAAP,CAAcjG,MAAM,CAACiG,MAAP,CAAc,EAAd,EAAkBT,UAAlB,CAAd,EAA6C;AAAEU,0BAAgB,EAAEnB;AAApB,SAA7C,CAAtB,CAAT;AACD,OAFI,MAGA,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC7BS,cAAM,GAAG,KAAKrD,OAAL,CAAarC,EAAb,EAAiBhB,MAAjB,EAAyBmB,MAAM,CAACiG,MAAP,CAAcjG,MAAM,CAACiG,MAAP,CAAc,EAAd,EAAkBT,UAAlB,CAAd,EAA6C;AAAEV,mBAAS,EAAE,MAAb;AAAqBnD,kBAAQ,EAAE,IAA/B;AAAqCuE,0BAAgB,EAAEnB;AAAvD,SAA7C,CAAzB,CAAT;AACD;AACF;;AACD,WAAOM,OAAP;AACD;AACD;;;AACMc,YAAU,GAAG;AAAA;;AAAA;AACjB,YAAMnB,MAAM,GAAG,MAAI,CAACC,aAAL,EAAf;;AACA,aAAOD,MAAM,GACT;AACAnF,UAAE,EAAEmF,MAAM,CAAC/F,OAAP,CAAemH,OADnB;AAEAvH,cAAM,EAAEmG,MAAM,CAACnG,MAFf;AAGAI,eAAO,EAAE+F,MAAM,CAAC/F;AAHhB,OADS,GAMTS,SANJ;AAFiB;AASlB;AACD;AACF;AACA;;;AACE2G,WAAS,GAAG;AACV,WAAOnB,OAAO,CAACC,OAAR,CAAgB,KAAKF,aAAL,EAAhB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;;;AACEqB,YAAU,CAACC,KAAD,EAAQ;AAChB,WAAOrB,OAAO,CAACC,OAAR,CAAgB,KAAKzD,KAAL,CAAW6E,KAAX,CAAhB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;;;AACEC,WAAS,CAAC5G,IAAD,EAAO;AACd,WAAOsF,OAAO,CAACC,OAAR,CAAgB,KAAKsB,aAAL,CAAmB7G,IAAnB,CAAhB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;;;AACE8G,aAAW,CAAC9G,IAAD,EAAO;AAChB,WAAOsF,OAAO,CAACC,OAAR,CAAgB,KAAKwB,eAAL,CAAqB/G,IAArB,CAAhB,CAAP;AACD;;AACDgH,WAAS,GAAG;AACV,WAAO,KAAKlF,KAAL,CAAWvB,MAAlB;AACD;;AACD8E,eAAa,GAAG;AACd,WAAO,KAAKvD,KAAL,CAAW,KAAKA,KAAL,CAAWvB,MAAX,GAAoB,CAA/B,CAAP;AACD;;AACDsG,eAAa,CAAC7G,IAAI,GAAG,KAAKqF,aAAL,EAAR,EAA8B;AACzC,WAAO,CAAC,EAAErF,IAAI,IAAI,KAAK+G,eAAL,CAAqB/G,IAArB,CAAV,CAAR;AACD;;AACD+G,iBAAe,CAAC/G,IAAI,GAAG,KAAKqF,aAAL,EAAR,EAA8B;AAC3C,QAAI,CAACrF,IAAL,EAAW;AACT,aAAOF,SAAP;AACD;;AACD,UAAMgC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM6E,KAAK,GAAG7E,KAAK,CAACmF,OAAN,CAAcjH,IAAd,CAAd;AACA,WAAO2G,KAAK,GAAG,CAAR,GAAY7E,KAAK,CAAC6E,KAAK,GAAG,CAAT,CAAjB,GAA+B7G,SAAtC;AACD,GAvTe,CAwThB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMiE,WAAS,CAACmD,EAAD,EAAKpD,IAAL,EAAW;AAAA;;AAAA;AACxB,UAAI,MAAI,CAAClC,eAAL,IAAwBsF,EAAE,CAACrD,IAAH,IAAW,IAAnC,IAA2CqD,EAAE,CAACrD,IAAH,CAAQsD,UAAvD,EAAmE;AACjE,eAAO7B,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AACD,YAAME,OAAO,GAAG,IAAIH,OAAJ,CAAY,CAACC,OAAD,EAAU6B,MAAV,KAAqB;AAC/CF,UAAE,CAAC3B,OAAH,GAAaA,OAAb;AACA2B,UAAE,CAACE,MAAH,GAAYA,MAAZ;AACD,OAHe,CAAhB;AAIAF,QAAE,CAACpD,IAAH,GAAUA,IAAV;AACA;AACJ;AACA;AACA;AACA;AACA;;AACI,UAAIoD,EAAE,CAACrD,IAAH,IAAWqD,EAAE,CAACrD,IAAH,CAAQgC,SAAR,KAAsB,KAAjC,IAA0C,MAAI,CAAClE,SAAnD,EAA8D;AAC5D,cAAM0F,MAAM,GAAG5E,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;;AACA,YAAI2E,MAAJ,EAAY;AACV,gBAAMC,aAAa,SAASD,MAAM,CAACC,aAAP,EAA5B;;AACA,cAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,mBAAOhC,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD,WAFD,MAGK,IAAI,OAAO+B,aAAP,KAAyB,QAA7B,EAAuC;AAC1CD,kBAAM,CAACzD,IAAP,CAAY0D,aAAZ,EAA2BJ,EAAE,CAACrD,IAAH,CAAQqB,SAAR,IAAqB,MAAhD;AACA,mBAAOI,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;AACF;AACF,OA3BuB,CA4BxB;;;AACA,UAAI2B,EAAE,CAACjD,WAAH,IAAkBiD,EAAE,CAACjD,WAAH,CAAe1D,MAAf,KAA0B,CAAhD,EAAmD;AACjD2G,UAAE,CAACjD,WAAH,GAAiBnE,SAAjB;AACD,OA/BuB,CAgCxB;;;AACA,YAAI,CAAC2B,UAAL,CAAgBmC,IAAhB,CAAqBsD,EAArB,EAjCwB,CAkCxB;AACA;;;AACA,YAAI,CAACK,QAAL;;AACA,aAAO9B,OAAP;AArCwB;AAsCzB;;AACD+B,SAAO,CAACC,MAAD,EAASP,EAAT,EAAa;AAClB,QAAI,KAAKrF,SAAT,EAAoB;AAClB,WAAK6F,SAAL,CAAe,8BAAf,EAA+CR,EAA/C;AACA;AACD;;AACD,QAAIA,EAAE,CAACpD,IAAP,EAAa;AACXoD,QAAE,CAACpD,IAAH,CAAQ2D,MAAM,CAACE,YAAf,EAA6BF,MAAM,CAACG,kBAApC,EAAwDH,MAAM,CAACI,YAA/D,EAA6EJ,MAAM,CAACK,WAApF,EAAiGL,MAAM,CAACvC,SAAxG;AACD;;AACDgC,MAAE,CAAC3B,OAAH,CAAWkC,MAAM,CAACE,YAAlB;;AACA,QAAIT,EAAE,CAACrD,IAAH,CAAQgC,SAAR,KAAsB,KAAtB,IAA+B,KAAKlE,SAAxC,EAAmD;AACjD,YAAM0F,MAAM,GAAG5E,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;;AACA,UAAI2E,MAAJ,EAAY;AACV,cAAMnC,SAAS,GAAGuC,MAAM,CAACvC,SAAP,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,SAAzD;AACAmC,cAAM,CAACU,UAAP,CAAkB7C,SAAlB;AACD;AACF;AACF;;AACD8C,QAAM,CAACC,YAAD,EAAef,EAAf,EAAmB;AACvB,QAAI,KAAKrF,SAAT,EAAoB;AAClB,WAAK6F,SAAL,CAAe,8BAAf,EAA+CR,EAA/C;AACA;AACD;;AACD,SAAKzF,UAAL,CAAgBlB,MAAhB,GAAyB,CAAzB;AACA,SAAKmH,SAAL,CAAeO,YAAf,EAA6Bf,EAA7B;AACD;;AACDQ,WAAS,CAACO,YAAD,EAAef,EAAf,EAAmB;AAC1B,QAAIA,EAAE,CAACpD,IAAP,EAAa;AACXoD,QAAE,CAACpD,IAAH,CAAQ,KAAR,EAAe,KAAf,EAAsBmE,YAAtB;AACD;;AACD,QAAIf,EAAE,CAACE,MAAH,IAAa,CAAC,KAAKvF,SAAvB,EAAkC;AAChCqF,QAAE,CAACE,MAAH,CAAUa,YAAV;AACD,KAFD,MAGK;AACHf,QAAE,CAAC3B,OAAH,CAAW,KAAX;AACD;AACF;;AACDgC,UAAQ,GAAG;AACT;AACA;AACA,QAAI,KAAK3F,eAAT,EAA0B;AACxB,aAAO,KAAP;AACD,KALQ,CAMT;AACA;;;AACA,UAAMsF,EAAE,GAAG,KAAKzF,UAAL,CAAgByG,KAAhB,EAAX;;AACA,QAAI,CAAChB,EAAL,EAAS;AACP,aAAO,KAAP;AACD;;AACD,SAAKiB,aAAL,CAAmBjB,EAAnB;AACA,WAAO,IAAP;AACD;;AACKiB,eAAa,CAACjB,EAAD,EAAK;AAAA;;AAAA;AACtB,UAAI;AACF;AACA,cAAI,CAAC3F,gBAAL,CAAsByB,IAAtB;;AACA,cAAI,CAACpB,eAAL,GAAuB,IAAvB;;AACA,cAAI,CAACwG,SAAL,CAAelB,EAAf;;AACA,cAAMY,WAAW,GAAG,MAAI,CAACzC,aAAL,EAApB;;AACA,cAAMwC,YAAY,GAAG,MAAI,CAACQ,eAAL,CAAqBnB,EAArB,EAAyBY,WAAzB,CAArB;;AACA,YAAI,CAACA,WAAD,IAAgB,CAACD,YAArB,EAAmC;AACjC,gBAAM,IAAIS,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACD,YAAIT,YAAY,IAAIA,YAAY,CAAC3I,KAAb,KAAuBP,cAA3C,EAA2D;AACzD,gBAAMkJ,YAAY,CAAC1I,IAAb,CAAkB,MAAI,CAACwD,EAAvB,CAAN;AACD;;AACD,cAAI,CAAC4F,YAAL,CAAkBV,YAAlB,EAAgCC,WAAhC,EAA6CZ,EAA7C,EAbE,CAcF;;;AACA,cAAMU,kBAAkB,GAAG,CAACV,EAAE,CAACsB,0BAAH,IAAiCtB,EAAE,CAACuB,yBAArC,KACzBZ,YAAY,KAAKC,WADnB;;AAEA,YAAIF,kBAAkB,IAAIV,EAAE,CAACrD,IAAzB,IAAiCiE,WAArC,EAAkD;AAChD,gBAAMY,eAAe,GAAGxB,EAAE,CAACrD,IAAH,CAAQqB,SAAR,KAAsB,MAA9C;AACA;AACR;AACA;AACA;;AACQ,cAAIwD,eAAJ,EAAqB;AACnBxB,cAAE,CAACrD,IAAH,CAAQyC,gBAAR,GAA2BY,EAAE,CAACrD,IAAH,CAAQyC,gBAAR,IAA6BuB,YAAY,IAAIA,YAAY,CAACvB,gBAArF;AACD;;AACDwB,qBAAW,CAACxB,gBAAZ,GAA+BY,EAAE,CAACrD,IAAH,CAAQyC,gBAAvC;AACD;;AACD,cAAMmB,MAAM,GAAGG,kBAAkB,SACvB,MAAI,CAACe,UAAL,CAAgBd,YAAhB,EAA8BC,WAA9B,EAA2CZ,EAA3C,CADuB,GAE7B;AACA;AACA;AACA;AACA;AACAS,sBAAY,EAAE,IALd;AAMAC,4BAAkB,EAAE;AANpB,SAFJ;;AAUA,cAAI,CAACJ,OAAL,CAAaC,MAAb,EAAqBP,EAArB;;AACA,cAAI,CAAC1F,eAAL,CAAqBwB,IAArB;AACD,OAxCD,CAyCA,OAAOiF,YAAP,EAAqB;AACnB,cAAI,CAACD,MAAL,CAAYC,YAAZ,EAA0Bf,EAA1B;AACD;;AACD,YAAI,CAACtF,eAAL,GAAuB,KAAvB;;AACA,YAAI,CAAC2F,QAAL;AA9CsB;AA+CvB;;AACDa,WAAS,CAAClB,EAAD,EAAK;AACZ,UAAM0B,WAAW,GAAG,KAAK9G,KAAL,CAAWvB,MAA/B;AACA2G,MAAE,CAACrD,IAAH,GAAUqD,EAAE,CAACrD,IAAH,IAAW,EAArB;;AACA,QAAIqD,EAAE,CAACrD,IAAH,CAAQtE,QAAR,KAAqBO,SAAzB,EAAoC;AAClCoH,QAAE,CAACrD,IAAH,CAAQtE,QAAR,GAAmB,KAAKA,QAAxB;AACD;;AACD,QAAI2H,EAAE,CAACtC,UAAH,KAAkB9E,SAAtB,EAAiC;AAC/BL,6DAAM,CAACyH,EAAE,CAAC3C,WAAH,KAAmBzE,SAApB,EAA+B,8BAA/B,CAAN;AACAL,6DAAM,CAACyH,EAAE,CAAC1C,WAAH,KAAmB1E,SAApB,EAA+B,8BAA/B,CAAN;AACA,YAAM6G,KAAK,GAAG,KAAK7E,KAAL,CAAWmF,OAAX,CAAmBC,EAAE,CAACtC,UAAtB,CAAd;;AACA,UAAI+B,KAAK,GAAG,CAAZ,EAAe;AACb,cAAM,IAAI2B,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACDpB,QAAE,CAAC3C,WAAH,IAAkBoC,KAAlB;AACD;;AACD,QAAIO,EAAE,CAAC3C,WAAH,KAAmBzE,SAAvB,EAAkC;AAChC,UAAIoH,EAAE,CAAC3C,WAAH,GAAiB,CAArB,EAAwB;AACtB2C,UAAE,CAAC3C,WAAH,GAAiBqE,WAAW,GAAG,CAA/B;AACD;;AACD,UAAI1B,EAAE,CAAC1C,WAAH,GAAiB,CAArB,EAAwB;AACtB0C,UAAE,CAAC1C,WAAH,GAAiBoE,WAAW,GAAG1B,EAAE,CAAC3C,WAAlC;AACD;;AACD2C,QAAE,CAACuB,yBAAH,GACEvB,EAAE,CAAC1C,WAAH,GAAiB,CAAjB,IAAsB0C,EAAE,CAAC3C,WAAH,GAAiB2C,EAAE,CAAC1C,WAApB,KAAoCoE,WAD5D;AAED;;AACD,QAAI1B,EAAE,CAACjD,WAAP,EAAoB;AAClB;AACA;AACA,UAAIiD,EAAE,CAAClD,WAAH,GAAiB,CAAjB,IAAsBkD,EAAE,CAAClD,WAAH,GAAiB4E,WAA3C,EAAwD;AACtD1B,UAAE,CAAClD,WAAH,GAAiB4E,WAAjB;AACD;;AACD1B,QAAE,CAACsB,0BAAH,GAAgCtB,EAAE,CAAClD,WAAH,KAAmB4E,WAAnD;AACD;;AACD,UAAM3E,WAAW,GAAGiD,EAAE,CAACjD,WAAvB;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AACDxE,2DAAM,CAACwE,WAAW,CAAC1D,MAAZ,GAAqB,CAAtB,EAAyB,wBAAzB,CAAN;AACA,UAAMsI,eAAe,GAAGlI,cAAc,CAACsD,WAAD,CAAtC;;AACA,QAAI4E,eAAe,CAACtI,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,YAAM,IAAI+H,KAAJ,CAAU,yBAAV,CAAN;AACD,KAzCW,CA0CZ;;;AACA,SAAK,MAAMtI,IAAX,IAAmB6I,eAAnB,EAAoC;AAClC7I,UAAI,CAACT,QAAL,GAAgB2H,EAAE,CAACrD,IAAH,CAAQtE,QAAxB;AACA,YAAMM,GAAG,GAAGG,IAAI,CAACH,GAAjB;;AACA,UAAIA,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB;AACvB,cAAM,IAAIyI,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,UAAItI,IAAI,CAACd,KAAL,KAAeL,oBAAnB,EAAyC;AACvC,cAAM,IAAIyJ,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF;;AACDpB,MAAE,CAACjD,WAAH,GAAiB4E,eAAjB;AACD;;AACDR,iBAAe,CAACnB,EAAD,EAAKY,WAAL,EAAkB;AAC/B,UAAM7D,WAAW,GAAGiD,EAAE,CAACjD,WAAvB;;AACA,QAAIA,WAAW,KAAKnE,SAApB,EAA+B;AAC7B;AACA;AACA,aAAOmE,WAAW,CAACA,WAAW,CAAC1D,MAAZ,GAAqB,CAAtB,CAAlB;AACD;;AACD,UAAMgE,WAAW,GAAG2C,EAAE,CAAC3C,WAAvB;;AACA,QAAIA,WAAW,KAAKzE,SAApB,EAA+B;AAC7B,YAAMgC,KAAK,GAAG,KAAKA,KAAnB;AACA,YAAMgH,SAAS,GAAGvE,WAAW,GAAG2C,EAAE,CAAC1C,WAAnC;;AACA,WAAK,IAAIuE,CAAC,GAAGjH,KAAK,CAACvB,MAAN,GAAe,CAA5B,EAA+BwI,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,cAAM/I,IAAI,GAAG8B,KAAK,CAACiH,CAAD,CAAlB;;AACA,YAAI,CAACA,CAAC,GAAGxE,WAAJ,IAAmBwE,CAAC,IAAID,SAAzB,KAAuC9I,IAAI,KAAK8H,WAApD,EAAiE;AAC/D,iBAAO9H,IAAP;AACD;AACF;AACF;;AACD,WAAOF,SAAP;AACD;;AACDyI,cAAY,CAACV,YAAD,EAAeC,WAAf,EAA4BZ,EAA5B,EAAgC;AAC1CzH,2DAAM,CAACqI,WAAW,IAAID,YAAhB,EAA8B,4CAA9B,CAAN;AACApI,2DAAM,CAACyH,EAAE,CAAC3B,OAAJ,EAAa,uBAAb,CAAN;AACA9F,2DAAM,CAACyH,EAAE,CAACE,MAAJ,EAAY,sBAAZ,CAAN;AACA,UAAMvD,IAAI,GAAGqD,EAAE,CAACrD,IAAhB;AACA,UAAMI,WAAW,GAAGiD,EAAE,CAACjD,WAAvB;AACA,UAAMM,WAAW,GAAG2C,EAAE,CAAC3C,WAAvB;AACA,UAAMC,WAAW,GAAG0C,EAAE,CAAC1C,WAAvB;AACA,QAAIwE,YAAJ,CAR0C,CAS1C;;AACA,QAAIzE,WAAW,KAAKzE,SAAhB,IAA6B0E,WAAW,KAAK1E,SAAjD,EAA4D;AAC1DL,6DAAM,CAAC8E,WAAW,IAAI,CAAhB,EAAmB,iCAAnB,CAAN;AACA9E,6DAAM,CAAC+E,WAAW,IAAI,CAAhB,EAAmB,iCAAnB,CAAN;AACAwE,kBAAY,GAAG,EAAf;;AACA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvE,WAApB,EAAiCuE,CAAC,EAAlC,EAAsC;AACpC,cAAM/I,IAAI,GAAG,KAAK8B,KAAL,CAAWiH,CAAC,GAAGxE,WAAf,CAAb;;AACA,YAAIvE,IAAI,IAAIA,IAAI,KAAK6H,YAAjB,IAAiC7H,IAAI,KAAK8H,WAA9C,EAA2D;AACzDkB,sBAAY,CAACpF,IAAb,CAAkB5D,IAAlB;AACD;AACF,OATyD,CAU1D;;;AACA6D,UAAI,CAACqB,SAAL,GAAiBrB,IAAI,CAACqB,SAAL,IAAkB,MAAnC;AACD;;AACD,UAAM+D,YAAY,GAAG,KAAKnH,KAAL,CAAWvB,MAAX,IAClB0D,WAAW,KAAKnE,SAAhB,GAA4BmE,WAAW,CAAC1D,MAAxC,GAAiD,CAD/B,KAElBiE,WAAW,KAAK1E,SAAhB,GAA4B0E,WAA5B,GAA0C,CAFxB,CAArB;AAGA/E,2DAAM,CAACwJ,YAAY,IAAI,CAAjB,EAAoB,mCAApB,CAAN;;AACA,QAAIA,YAAY,KAAK,CAArB,EAAwB;AACtBC,aAAO,CAACC,IAAR,CAAc,sGAAd,EAAqH,IAArH,EAA2H,KAAKxG,EAAhI;AACA,YAAM,IAAI2F,KAAJ,CAAU,+CAAV,CAAN;AACD,KA9ByC,CA+B1C;AACA;;;AACA,QAAIrE,WAAJ,EAAiB;AACf;AACA,UAAIE,WAAW,GAAG+C,EAAE,CAAClD,WAArB;;AACA,WAAK,MAAMhE,IAAX,IAAmBiE,WAAnB,EAAgC;AAC9B,aAAKmF,YAAL,CAAkBpJ,IAAlB,EAAwBmE,WAAxB;AACAA,mBAAW;AACZ;;AACD,UAAI+C,EAAE,CAACsB,0BAAP,EAAmC;AACjC;AACA3E,YAAI,CAACqB,SAAL,GAAiBrB,IAAI,CAACqB,SAAL,IAAkB,SAAnC;AACD;AACF,KA5CyC,CA6C1C;AACA;AACA;AACA;AACA;;;AACA,QAAI8D,YAAY,IAAIA,YAAY,CAACzI,MAAb,GAAsB,CAA1C,EAA6C;AAC3C,WAAK,MAAMP,IAAX,IAAmBgJ,YAAnB,EAAiC;AAC/BvF,6DAAS,CAACzD,IAAI,CAACX,OAAN,EAAegK,iDAAf,CAAT;AACA5F,6DAAS,CAACzD,IAAI,CAACX,OAAN,EAAeiK,iDAAf,CAAT;AACA7F,6DAAS,CAACzD,IAAI,CAACX,OAAN,EAAeqE,iDAAf,CAAT;AACD,OAL0C,CAM3C;;;AACA,WAAK,MAAM1D,IAAX,IAAmBgJ,YAAnB,EAAiC;AAC/B,aAAKO,WAAL,CAAiBvJ,IAAjB;AACD;AACF;AACF;;AACK2I,YAAU,CAACd,YAAD,EAAeC,WAAf,EAA4BZ,EAA5B,EAAgC;AAAA;;AAAA;AAC9C;AACA;AACA,YAAMrD,IAAI,GAAGqD,EAAE,CAACrD,IAAhB;AACA,YAAM2F,gBAAgB,GAAG3F,IAAI,CAAC4F,iBAAL,GACpBC,GAAD,IAAS,MAAI,CAACC,KAAL,GAAaD,GADD,GAErB5J,SAFJ;AAGA,YAAM+C,IAAI,GAAGC,4DAAU,CAAC,MAAD,CAAvB;AACA,YAAMiD,UAAU,GAAG8B,YAAY,CAACxI,OAAhC;AACA,YAAMuK,SAAS,GAAG9B,WAAW,IAAIA,WAAW,CAACzI,OAA7C;AACA,YAAMwK,aAAa,GAAGzJ,MAAM,CAACiG,MAAP,CAAc;AAAExD,YAAF;AAAQiH,kBAAU,EAAE,MAAI,CAACjD,aAAL,CAAmBgB,YAAnB,CAApB;AAAsDkC,cAAM,EAAE,MAAI,CAACpH,EAAnE;AAAuE2D,wBAAgB,EAAE,MAAI,CAACnB,SAAL,IAAkBtB,IAAI,CAACyC,gBAAvB,IAA2CvD,4DAAA,CAAW,cAAX,CAApI;AAAgKyG,wBAAhK;AAAkLzH,gBAAQ,EAAE,MAAI,CAACA,QAAL,IAAiBgB,mEAAA,CAAkB,UAAlB,EAA8B,IAA9B,CAA7M;AAAkPgD,kBAAlP;AAClC6D;AADkC,OAAd,EACP/F,IADO,CAAtB;AAEA,YAAM;AAAE8D;AAAF,gBAAyBgB,qDAAU,CAACkB,aAAD,CAAzC;AACA,aAAO,MAAI,CAACG,gBAAL,CAAsBrC,YAAtB,EAAoCE,YAApC,EAAkDC,WAAlD,EAA+DjE,IAA/D,CAAP;AAb8C;AAc/C;;AACDmG,kBAAgB,CAACrC,YAAD,EAAeE,YAAf,EAA6BC,WAA7B,EAA0CjE,IAA1C,EAAgD;AAC9D,UAAMoG,WAAW,GAAGtC,YAAY,GAAGE,YAAH,GAAkBC,WAAlD;;AACA,QAAImC,WAAJ,EAAiB;AACf,WAAKC,OAAL,CAAaD,WAAb;AACD;;AACD,WAAO;AACLtC,kBADK;AAELC,wBAAkB,EAAE,IAFf;AAGLC,kBAHK;AAILC,iBAJK;AAKL5C,eAAS,EAAErB,IAAI,CAACqB;AALX,KAAP;AAOD;;AACDkE,cAAY,CAACpJ,IAAD,EAAO2G,KAAP,EAAc;AACxB,UAAM7E,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMqI,aAAa,GAAGrI,KAAK,CAACmF,OAAN,CAAcjH,IAAd,CAAtB;;AACA,QAAImK,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtB;AACA;AACA1K,6DAAM,CAACO,IAAI,CAACH,GAAL,KAAa,IAAd,EAAoB,6BAApB,CAAN;AACAiC,WAAK,CAACsI,MAAN,CAAazD,KAAb,EAAoB,CAApB,EAAuB7E,KAAK,CAACsI,MAAN,CAAaD,aAAb,EAA4B,CAA5B,EAA+B,CAA/B,CAAvB;AACD,KALD,MAMK;AACH1K,6DAAM,CAAC,CAACO,IAAI,CAACH,GAAP,EAAY,aAAZ,CAAN,CADG,CAEH;AACA;;AACAG,UAAI,CAACH,GAAL,GAAW,IAAX,CAJG,CAKH;;AACAiC,WAAK,CAACsI,MAAN,CAAazD,KAAb,EAAoB,CAApB,EAAuB3G,IAAvB;AACD;AACF;;AACD4E,YAAU,CAAC5E,IAAD,EAAO;AACfP,2DAAM,CAACO,IAAI,CAACd,KAAL,KAAeN,mBAAf,IAAsCoB,IAAI,CAACd,KAAL,KAAeL,oBAAtD,EAA4E,0CAA5E,CAAN;AACA,UAAMiD,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM6E,KAAK,GAAG7E,KAAK,CAACmF,OAAN,CAAcjH,IAAd,CAAd;AACAP,2DAAM,CAACkH,KAAK,GAAG,CAAC,CAAV,EAAa,gCAAb,CAAN;;AACA,QAAIA,KAAK,IAAI,CAAb,EAAgB;AACd7E,WAAK,CAACsI,MAAN,CAAazD,KAAb,EAAoB,CAApB;AACD;AACF;;AACD4C,aAAW,CAACvJ,IAAD,EAAO;AAChBA,QAAI,CAACR,QAAL;;AACA,SAAKoF,UAAL,CAAgB5E,IAAhB;AACD;AACD;AACF;AACA;;;AACEkK,SAAO,CAACG,UAAD,EAAa;AAClB;AACA;AACA;AACA,QAAI,KAAKxI,SAAT,EAAoB;AAClB;AACD;;AACD,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMwI,eAAe,GAAGxI,KAAK,CAACmF,OAAN,CAAcoD,UAAd,CAAxB;;AACA,SAAK,IAAItB,CAAC,GAAGjH,KAAK,CAACvB,MAAN,GAAe,CAA5B,EAA+BwI,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,YAAM/I,IAAI,GAAG8B,KAAK,CAACiH,CAAD,CAAlB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,YAAM1J,OAAO,GAAGW,IAAI,CAACX,OAArB;;AACA,UAAIA,OAAJ,EAAa;AACX,YAAI0J,CAAC,GAAGuB,eAAR,EAAyB;AACvB;AACA;AACA7G,+DAAS,CAACpE,OAAD,EAAUqE,iDAAV,CAAT;AACA,eAAK6F,WAAL,CAAiBvJ,IAAjB;AACD,SALD,MAMK,IAAI+I,CAAC,GAAGuB,eAAR,EAAyB;AAC5B;AACA;AACAC,+DAAa,CAAClL,OAAD,EAAU,IAAV,CAAb;AACD;AACF;AACF;AACF;;AACD8D,UAAQ,GAAG;AACT,WAAQ,CAAC,CAAC,KAAKhB,YAAP,IACN,CAAC,KAAKP,eADA,IAEN,KAAKH,UAAL,CAAgBlB,MAAhB,KAA2B,CAFrB,IAGN,KAAKmB,gBAHC,IAIN,KAAKmF,aAAL,EAJF;AAKD;;AACDxD,SAAO,GAAG;AACR,SAAKU,SAAL,CAAe;AACbQ,iBAAW,EAAE,CAAC,CADD;AAEbC,iBAAW,EAAE,CAFA;AAGbX,UAAI,EAAE;AACJqB,iBAAS,EAAE,MADP;AAEJuE,yBAAiB,EAAE;AAFf;AAHO,KAAf,EAOG3J,SAPH;AAQD;;AACDwD,QAAM,CAACkH,SAAD,EAAY;AAChB,QAAI,KAAKb,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWc,YAAX,CAAwBD,SAAxB;AACD;AACF;;AACDjH,OAAK,CAACmH,cAAD,EAAiBF,SAAjB,EAA4BG,GAA5B,EAAiC;AACpC,QAAI,KAAKhB,KAAT,EAAgB;AACd,WAAKjI,gBAAL,GAAwB,KAAxB;AACA,WAAKiI,KAAL,CAAWiB,QAAX,CAAoB,MAAM;AACxB,aAAKlJ,gBAAL,GAAwB,IAAxB;AACD,OAFD,EAEG;AAAEmJ,uBAAe,EAAE;AAAnB,OAFH,EAFc,CAKd;;AACA,UAAIC,YAAY,GAAIJ,cAAD,GAAmB,CAAC,KAApB,GAA4B,KAA/C;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAI,CAACA,cAAL,EAAqB;AACnB,aAAKf,KAAL,CAAWoB,MAAX,CAAkB,gCAAlB;AACAD,oBAAY,IAAIE,4DAAuB,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,IAAD,EAAO,IAAP,CAAjB,EAA+B,CAAC,CAAD,EAAI,CAAJ,CAA/B,EAAuCR,SAAvC,CAAvB,CAAyE,CAAzE,CAAhB;AACD,OAHD,MAIK;AACHM,oBAAY,IAAIE,4DAAuB,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,IAAD,EAAO,IAAP,CAAT,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,EAA+B,CAAC,CAAD,EAAI,CAAJ,CAA/B,EAAuCR,SAAvC,CAAvB,CAAyE,CAAzE,CAAhB;AACD;;AACD,WAAKb,KAAL,CAAWsB,WAAX,CAAuBP,cAAc,GAAG,CAAH,GAAO,CAA5C,EAA+CI,YAA/C,EAA6DH,GAA7D;AACD;AACF;;AACDO,QAAM,GAAG;AACP,WAAQC,qDAAC,CAAC,MAAD,EAAS,IAAT,CAAT;AACD;;AACK,MAAFxI,EAAE,GAAG;AAAE,WAAOyI,qDAAU,CAAC,IAAD,CAAjB;AAA0B;;AAClB,aAARC,QAAQ,GAAG;AAAE,WAAO;AAC7B,sBAAgB,CAAC,qBAAD,CADa;AAE7B,cAAQ,CAAC,aAAD;AAFqB,KAAP;AAGpB;;AA7uBY,CAAlB;AA+uBAnK,GAAG,CAACoK,KAAJ,GAAYrK,MAAZ;;AAEA,MAAMsK,OAAO,GAAG,CAAC5I,EAAD,EAAK6I,eAAL,EAAsBxM,SAAtB,EAAiC8B,cAAjC,EAAiD2K,eAAjD,KAAqE;AACnF,QAAM5L,GAAG,GAAG8C,EAAE,CAACC,OAAH,CAAW,SAAX,CAAZ;;AACA,MAAI/C,GAAJ,EAAS;AACP,QAAI2L,eAAe,KAAK,SAAxB,EAAmC;AACjC,UAAIxM,SAAS,KAAKc,SAAlB,EAA6B;AAC3B,eAAOD,GAAG,CAAC+D,IAAJ,CAAS5E,SAAT,EAAoB8B,cAApB,EAAoC;AAAEqG,oBAAU,EAAE,IAAd;AAAoBb,0BAAgB,EAAEmF;AAAtC,SAApC,CAAP;AACD;AACF,KAJD,MAKK,IAAID,eAAe,KAAK,MAAxB,EAAgC;AACnC,UAAIxM,SAAS,KAAKc,SAAlB,EAA6B;AAC3B,eAAOD,GAAG,CAACyC,OAAJ,CAAYtD,SAAZ,EAAuB8B,cAAvB,EAAuC;AAAEqG,oBAAU,EAAE,IAAd;AAAoBb,0BAAgB,EAAEmF;AAAtC,SAAvC,CAAP;AACD;AACF,KAJI,MAKA,IAAID,eAAe,KAAK,MAAxB,EAAgC;AACnC,aAAO3L,GAAG,CAACyE,GAAJ,CAAQ;AAAE6C,kBAAU,EAAE,IAAd;AAAoBb,wBAAgB,EAAEmF;AAAtC,OAAR,CAAP;AACD;AACF;;AACD,SAAOnG,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD,CAlBD;;AAoBA,MAAMmG,OAAO,GAAG,MAAM;AACpB3M,aAAW,CAACoC,OAAD,EAAU;AACnBC,yDAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA;AACJ;AACA;;AACI,SAAKqK,eAAL,GAAuB,SAAvB;;AACA,SAAKG,OAAL,GAAe,MAAM;AACnB,aAAOJ,OAAO,CAAC,KAAK5I,EAAN,EAAU,KAAK6I,eAAf,EAAgC,KAAKxM,SAArC,EAAgD,KAAK8B,cAArD,EAAqE,KAAK2K,eAA1E,CAAd;AACD,KAFD;AAGD;;AACDP,QAAM,GAAG;AACP,WAAQC,qDAAC,CAACS,iDAAD,EAAO;AAAED,aAAO,EAAE,KAAKA;AAAhB,KAAP,CAAT;AACD;;AACK,MAAFhJ,EAAE,GAAG;AAAE,WAAOyI,qDAAU,CAAC,IAAD,CAAjB;AAA0B;;AAdjB,CAAtB","file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { l as assert } from './helpers-dd7e4b7b.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-931440b1.js';\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  const currentParams = view.params;\n  if (currentParams === params) {\n    return true;\n  }\n  if (!currentParams && !params) {\n    return true;\n  }\n  if (!currentParams || !params) {\n    return false;\n  }\n  const keysA = Object.keys(currentParams);\n  const keysB = Object.keys(params);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  // Test for A's keys different from B.\n  for (const key of keysA) {\n    if (currentParams[key] !== params[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter =\n      !!document.querySelector('ion-router') &&\n        !this.el.closest('[no-router]');\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-ee838cf8.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    // release swipe back gesture and transition\n    this.transInstr.length = this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: -1,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts\n    }, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const tiConfig = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      tiConfig.removeView = indexOrViewCtrl;\n      tiConfig.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      tiConfig.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(tiConfig, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.queueTrns({\n      removeStart: 1,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    if (opts == null) {\n      opts = {};\n    }\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /** @internal */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /** @internal */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    return active\n      ? {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      }\n      : undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  getActive() {\n    return Promise.resolve(this.getActiveSync());\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  getByIndex(index) {\n    return Promise.resolve(this.views[index]);\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  canGoBack(view) {\n    return Promise.resolve(this.canGoBackSync(view));\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  getPrevious(view) {\n    return Promise.resolve(this.getPreviousSync(view));\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n  // 1. _nextTrns(): consumes the next transition in the queue\n  // 2. _viewInit(): initializes enteringView if required\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n  // 4. _postViewInit(): add/remove the views from the navigation stack\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n  // 8. _transitionFinish(): called once the transition finishes\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n  async queueTrns(ti, done) {\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n      return Promise.resolve(false);\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return Promise.resolve(false);\n        }\n        else if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return Promise.resolve(false);\n        }\n      }\n    }\n    // Normalize empty\n    if (ti.insertViews && ti.insertViews.length === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now\n    // get the next instruction\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n        enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      const result = requiresTransition\n        ? await this.transition(enteringView, leavingView, ti)\n        : {\n          // transition is not required, so we are already done!\n          // they're inserting/removing the views somewhere in the middle or\n          // beginning, so visually nothing needs to animate/transition\n          // resolve immediately because there's no animation that's happening\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    const viewsLength = this.views.length;\n    ti.opts = ti.opts || {};\n    if (ti.opts.delegate === undefined) {\n      ti.opts.delegate = this.delegate;\n    }\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  getEnteringView(ti, leavingView) {\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      // grab the very last view of the views to be inserted\n      // and initialize it as the new entering view\n      return insertViews[insertViews.length - 1];\n    }\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  postViewInit(enteringView, leavingView, ti) {\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    const opts = ti.opts;\n    const insertViews = ti.insertViews;\n    const removeStart = ti.removeStart;\n    const removeCount = ti.removeCount;\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = 0; i < removeCount; i++) {\n        const view = this.views[i + removeStart];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      opts.direction = opts.direction || 'back';\n    }\n    const finalBalance = this.views.length +\n      (insertViews !== undefined ? insertViews.length : 0) -\n      (removeCount !== undefined ? removeCount : 0);\n    assert(finalBalance >= 0, 'final balance can not be negative');\n    if (finalBalance === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // there are views to insert\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        opts.direction = opts.direction || 'forward';\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts);\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      // this view is already in the stack!!\n      // move it to its new location\n      assert(view.nav === this, 'view is not part of the nav');\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      // insert the entering view into the correct index in the stack\n      views.splice(index, 0, view);\n    }\n  }\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts: {\n        direction: 'back',\n        progressAnimation: true\n      }\n    }, undefined);\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"sourceRoot":"webpack:///"}